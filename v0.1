# -*- coding: utf-8 -*-
"""
Created on Fri Dec 16 15:18:19 2016

@author: paul delano
"""

'''
Pully Roadmap

1.) v0.1 Setup search functionality
2.) v0.2 Build GUI
3.) v0.3 Have search return all links from front page unless other criteria is specified (keyword)
4.) v0.4 When specific link is returned, summarize text in x sentences
5.) v0.5 Store data in dataframe, send to SQL DB
6.) v1.0 Add url/link tracking in order to pull user behavior data.
7.) v2.0 Create ML algorithm to predict user search requests and return pulls based on previous searches
'''

# v0.1
from bs4 import BeautifulSoup
import urllib.request
import time

admins = {'Paul':'pass!'}
now = time.strftime("%c")

# Pully
def Pully():
    Welcome = print('Lets start Pulling! ' + '\n')
    linktoenter = input('Where do you want to pull from today? (full url needed): ')
    url = linktoenter
    html = urllib.request.urlopen(url).read()
    soup = BeautifulSoup(html, "lxml")

    if linktoenter in url:
            print()
            print(login  + ' here are your top stories for ' + (time.strftime("%A "  +  "%B "  +  "%d"))+ "\n ")
            links = {}
            n = 0
            link_title=soup.findAll('a',{'class':'tout-title-link'})
            n += 1
            links[n] = link_title
       
            for eachtitle in link_title:
                print(eachtitle.string + "\n" + "(pulled from) "+url+eachtitle['href']+ "\n " )
            else:
                exit()
    else:
        print('Unable to connect to URL. Please check spelling and retry ')

# Main       
def main():
    print('''
    Pully v0.03 
    
    [1] Pully
    [2] Exit
    
    
    Release Notes: 
                   v0.1: Headline & links returned
    ''')
    
    action = input('Choose an option: ')
    print()
    
    if action == '1':
        Pully()
    elif action == '2':
        exit()
    else:
        print('select a number')
        action = input('Choose an option:> ')
        print()


Home = print('\n' + 'Welcome to Pully ' + '\n' + 'Please login ' + '\n')
login = input('Username: ')
passw = input('Password: ')
print('Authenticating...' + '\n')

if login in admins:
    if admins[login] == passw:
        print('Welcome', login)
        while True: 
            main()
    else: 
        print('Invalid Password')

           
else:
    print('Invalid Username-- You have been logged out. Please log back in')
