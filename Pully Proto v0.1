'''
Pully

1.) v0.1 Setup search functionality
2.) v0.2 Have search return all links from front page unless other criteria is specified (author, date)
3.) v0.3 When specific link is returned, pull all text from link between <p></p>
4.) v0.4 Store Data in dataframe, send to SQL DB
5.) v1.0 Add url/link tracking in order to pull user behavior data
'''

# v0.01
from bs4 import BeautifulSoup
import urllib
import time

admins = {'Paul':'pass!'}
now = time.strftime("%c")

def Pully():
    Welcome = ('Welcome to Pully')
    print(Welcome)
    linktoenter = input('Where do you want to pull from today?: ')
    url = linktoenter
    html = urllib.request.urlopen(url).read()
    soup = BeautifulSoup(html, "lxml")
    #headlines = {'class':'title',
                 #'class':'headline-list__link'}

    if linktoenter in url:
        print('Here are your top stories for ' + (time.strftime("%A "  +  "%B "  +  "%d")))
        links = {}
        n = 0
        link_title=soup.findAll('a',{'class':'title'})
        n += 1
        links[n] = link_title
        for eachtitle in link_title:
            print(eachtitle.string +" (pulled from) "+eachtitle['href'])
        
        else:
            print('Whoops! Nothing seems to be here ')
            print('Please enter another URL...')

# Main       
def main():
    print('''
    Pully v0.01
    
    [1] Pully
    [2] Exit
    ''')
    
    action = input('Choose an option: ')
    
    if action == '1':
        Pully()
    elif action == '2':
        exit()
    else:
        print('select a number') 

# Login
login = input('Username: ')
passw = input('Password: ')

if login in admins:
    if admins[login] == passw:
        print('Welcome', login)
        while True: 
            main()
    else: 
        print('Invalid Password')
else:
    print('Invalid Username')
